#!/bin/bash
module_cpu(){
	read cpu a b c previdle rest < /proc/stat
	prevtotal=$((a+b+c+previdle))

	sleep 0.5

	read cpu a b c idle rest < /proc/stat
	total=$((a+b+c+idle))

	cpu=$((100*( (total-prevtotal) - (idle-previdle) ) / (total-prevtotal) ))

	if [ $cpu -gt 80 ]; then UL=$myRed
	elif [ $cpu -gt 65 ]; then UL=$myOrange
	else UL=$myNormal
	fi

	echo "%{U$UL}%{+u}%{A:st -e htop:} C:${cpu}% %{A}%{-u}"
}

module_ram(){
	ramtest=$(free -m | awk '$1~/Mem/{printf "%1.0f\n", $3*100/$2}')
	mem=$(free -h | awk '$1~/Mem/{print $3}' |tr -d i)
	swap=$(free -h | awk '$1~/Swap/{print $3}')

	if [ $ramtest -gt 90 ]; then UL=$myRed
	elif [ $ramtest -gt 75 ]; then UL=$myOrange
	else UL=$myNormal
	fi

	if [ "${swap}" == "0" ] || [ "${swap}" == "0B" ]
	then 	ramstatus=$(echo "${mem}" | tr -d i)
	else 	ramstatus=$(echo "${mem}"\|\|"${swap}" |tr -d i)
	fi

	echo "%{U$UL}%{+u}%{A:st -e htop:} R:$ramstatus %{A}%{-u}"
}

module_battery() {
	battery="/sys/class/power_supply/BAT0"
	batstate=$(sed "s/Discharging/D/;s/Not charging/N/;s/Charging/C/;s/Unknown/U/;s/Full/F/" ${battery}/status)
	capacity=$(cat "${battery}"/capacity)
	BG=$background

	case $batstate in
		F) UL="$myGreen" ;;
		C) UL=$foreground ;;
		N) UL=$myRed ;;
		U) UL=$BG ;;
		D) [ $capacity -lt 20 ] && UL=$myOrange || UL=$myNormal;;
		*) UL=$background
	esac

	echo "%{B$BG}%{U$UL}%{+u} B:${capacity}% %{-u}%{B-}"
}

module_temperature() {
	therm_status="$(acpi -t | awk -F '[[:space:]]+|,' '{ print $5 }')"
	therm_status="${therm_status:0:2}"
	BG=$background

	case "$therm_status" in
		[12345][0-9]) UL=$myNormal ;;
		[67][0-9]) UL=$myRed ;;
		*) UL=$myRed; BG=$myRed ;;
	esac

	echo "%{B$BG}%{U$UL}%{+u} T:${therm_status}Â°C %{-u}%{B-}"
}

module_volume() {
	amixer_get() {
		amixer get Master | \
		sed "/^\ *Front R/!d ; s,\(^.*\) \[\(.*%\)\] \[\(.*\)\],\\${1},"
	}

	volume_status="$(amixer_get 3)"
	volume_level="$(amixer_get 2)"

	case "$volume_status" in
		'on') UL=$myNormal ;;
		'off') UL=$myOrange ;;
	esac
	echo "%{U$UL}%{+u}%{A:smixer mute:} V:$volume_label$volume_level %{A}%{-u} "
}

module_datetime() {
	dt_status="$(date +'%H:%M')"

	echo "%{U$myNormal}%{+u}$dt_status%{-u}"
}

module_winname() {
	wintitle=$(xdotool getactivewindow getwindowname | cut -c1-50)
	[ "${wintitle}" = "" ] && UL=$background && echo "" || UL=$foreground
	echo "%{U$UL}%{+u} [ ${wintitle} ] %{-u}"
}

module_disk(){
	rootfree=$(df -h | awk '$6=="/"{print $4}')
	homefree=$(df -h | awk '$6=="/home"{print $4}')

	roottest=$(df -m | awk '$6=="/"{printf "%1.0f\n", $4/1024}')
	hometest=$(df -m | awk '$6=="/home"{printf "%1.0f\n", $4/1024}')

	[ $hometest -lt 5 ] || [ $roottest  -lt 2 ] && UL="$myOrange" || UL=$myNormal

	echo  "%{U$UL}%{+u}%{A:st -e lf:} /:${rootfree} /home:${homefree} %{A}%{-u}"
	# echo  "%{U$UL}%{+u}%{A:st -e lf:} /:${rootfree} %{A}%{-u}"
	# echo  "%{U$UL}%{+u}%{A:st -e lf:} /home:${homefree} %{A}%{-u}"
}

module_mounts(){
	mounted=$(df -h | awk '$1~/\/dev|mtp/&&$1!~/sda/{printf "%s (%s) ",$6,$4}')
	[ ! -z "${mounted}" ] && echo "%{U$myGreen}%{+u} ${mounted} %{-u}"
}

module_cmus(){
prepend_zero() {
        seq -f "%02g" $1 $1
}

artist=$(echo -n $(cmus-remote -C status | grep "tag artist" | cut -c 12-))
status=$(cmus-remote -C status | awk '/status/ {printf $2}')

case $status in
	"playing") UL=$myNormal ;;
	"paused") UL=$myOrange ;;
	*) UL=$background
esac

if [[ $artist = *[!\ ]* ]]; then
        song=$(echo -n $(cmus-remote -C status | grep title | cut -c 11-))
        position=$(cmus-remote -C status | grep position | cut -c 10-)
        minutes1=$(prepend_zero $(($position / 60)))
        seconds1=$(prepend_zero $(($position % 60)))
        duration=$(cmus-remote -C status | grep duration | cut -c 10-)
        minutes2=$(prepend_zero $(($duration / 60)))
        seconds2=$(prepend_zero $(($duration % 60)))
        infostring="$artist - $song [$minutes1:$seconds1/$minutes2:$seconds2]"
fi
	echo "%{U$UL}%{+u}%{A:st -e cmus-remote -u:} $infostring %{A}%{-u}"
}

module_apt(){
	if [ ! -f /tmp/aptlist ]
	then	echo "%{B$background}%{U$myRed}%{+u} -- %{B-}%{-u}"
	else 	aptlist=$(cat /tmp/aptlist)
		case $aptlist in
		0) echo "%{B$background}%{U$background}%{+u} %{B-}%{-u}" ;;
		*) echo "%{B$background}%{U$myOrange}%{+u} $aptlist %{B-}%{-u}" ;;
	esac
	fi
}

module_pomodoro(){
if [ -f /tmp/pomo ]
then
	[ "$(pgrep -x pomodoro)" = "" ] && rm /tmp/pomo
	mins=$(awk '{print int($2/60)}' /tmp/pomo)
	secs=$(awk '{print int($2%60)}' /tmp/pomo)
	[ $mins -le 9 ] && mins="0${mins}"
	[ $secs -le 9 ] && secs="0${secs}"

  	case $(awk '{print $1}' /tmp/pomo) in
		"work") UL=$myGreen ;;
		"break") UL=$myOrange ;;
		"bigbreak") UL=$myRed ;;
		*) UL=$background
	esac

	echo "%{U$UL}%{+u} $mins:$secs %{-u}"
fi
}
